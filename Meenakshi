#include <iostream>
#include <stack>
using namespace std;

int main()
{
    int arr[16];

    for (int i=0;i<=16;i++)
    {
        cout<<"Enter the Average Data of "<<2000+i<<endl;
        cin>>arr[i];
    }

    stack <int> raindata;

    for (int i=15;i>=0;i--)
    {
        raindata.push(arr[i]);
    }
    int c=2000;
    raindata.pop();
    while (!raindata.empty())
    {
        cout<<"For the year"<<c<<"The next highest is--";
        cout<<raindata.top()<<endl;
        raindata.pop();
        c=c+1;
    }
    cout<<"For the year"<<2015<<"The next highest is--";
    cout<<arr[16]<<endl;
    cout<<"For the year"<<2016<<"The next highest is--";
    cout<<"Data not available";

return 0;

}
--------------------------------------------------------------------------------------------------------------------------------------
/*   Use inputs like {()}{[]}{},()(){} ie using parenthesis only
     
*/
 

#include <iostream>
#include <stack>
#include <cstdio>
#include <string>
using namespace std;

int main()
{
    char S1[30];
    string S2;
    stack <char> stk;
    cout<<"Enter the expression";
    cin>>S1;


    for (int i=0;i<30;i++)
    {
        if (S1[i]=='{' || S1[i]=='('|| S1[i]=='[')
            {
                stk.push(S1[i]);
                S2=S2+S1[i];
            }
        else
        {
            if (S1[i]=='}' && stk.top()=='{')
            {
                stk.pop();
                int k = S2.length();
                for (int i=0;i<k;i++)
                {
                    if ((char)(S2[i])=='{')
                        {
                            cout<<"the length of subexpression {} "<<(k-i)*2<<endl;
                        }
                    else if ((char)(S2[i])=='(')
                        {
                            cout<<"the length of subexpression () "<<(k-i)*2<<endl;
                        }
                    else if ((char)(S2[i])=='[')
                        {
                            cout<<"the length of subexpression [] "<<(k-i)*2<<endl;
                        }

                }
                S2.clear();
            }
            else if (S1[i]=='}' && stk.top()!='{')
            {
                cout<<"Unbalanced Expression"<<endl;
                break;
            }

            if (S1[i]==')' && stk.top()=='(')
            {
                stk.pop();
                int k = S2.length();
                for (int i=0;i<k;i++)
                {
                    if ((char)(S2[i])=='{')
                        {
                            cout<<"the length of subexpression {} "<<(k-i)*2<<endl;
                        }
                    else if ((char)(S2[i])=='(')
                        {
                            cout<<"the length of subexpression () "<<(k-i)*2<<endl;
                        }
                    else if ((char)(S2[i])=='[')
                        {
                            cout<<"the length of subexpression [] "<<(k-i)*2<<endl;
                        }

                }
                S2.clear();
            }
            else if (S1[i]==')' && stk.top()!='(')
            {
                cout<<"Unbalanced Expression"<<endl;
                break;
            }

            if (S1[i]==']' && stk.top()=='[')
            {
                stk.pop();
                int k = S2.length();
                for (int i=0;i<k;i++)
                {
                    if ((char)(S2[i])=='{')
                        {
                            cout<<"the length of subexpression {} "<<(k-i)*2<<endl;
                        }
                    else if ((char)(S2[i])=='(')
                        {
                            cout<<"the length of subexpression () "<<(k-i)*2<<endl;
                        }
                    else if ((char)(S2[i])=='[')
                        {
                            cout<<"the length of subexpression [] "<<(k-i)*2<<endl;
                        }

                }
                S2.clear();
            }
            else if (S1[i]==']' && stk.top()!='[')
            {
                cout<<"Unbalanced Expression"<<endl;
                break;
            }
        }
    }
    return 0;
}
